-- MySQL Script generated by MySQL Workbench
-- sex 15 jan 2021 22:46:06
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema hcode_ecommerce_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema hcode_ecommerce_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `hcode_ecommerce_db` ;
USE `hcode_ecommerce_db` ;

-- -----------------------------------------------------
-- Table `hcode_ecommerce_db`.`person`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hcode_ecommerce_db`.`person` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `email` VARCHAR(128) NULL DEFAULT NULL,
  `n_phone` BIGINT(20) NULL DEFAULT NULL,
  `date_register` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hcode_ecommerce_db`.`address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hcode_ecommerce_db`.`address` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `id_person` INT(11) NOT NULL,
  `address` VARCHAR(128) NOT NULL,
  `complement` VARCHAR(32) NULL DEFAULT NULL,
  `city` VARCHAR(32) NOT NULL,
  `state` VARCHAR(32) NOT NULL,
  `country` VARCHAR(32) NOT NULL,
  `n_zipcode` INT(11) NOT NULL,
  `date_register` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_addresses_persons_idx` (`id_person` ASC) VISIBLE,
  CONSTRAINT `fk_addresses_persons`
    FOREIGN KEY (`id_person`)
    REFERENCES `hcode_ecommerce_db`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hcode_ecommerce_db`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hcode_ecommerce_db`.`user` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `id_person` INT(11) NOT NULL,
  `username` VARCHAR(64) NOT NULL,
  `password` VARCHAR(256) NOT NULL,
  `is_admin` TINYINT(4) NOT NULL DEFAULT '0',
  `date_register` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `FK_users_persons_idx` (`id_person` ASC) VISIBLE,
  CONSTRAINT `fk_users_persons`
    FOREIGN KEY (`id_person`)
    REFERENCES `hcode_ecommerce_db`.`person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hcode_ecommerce_db`.`cart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hcode_ecommerce_db`.`cart` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `security_session_id` VARCHAR(64) NOT NULL,
  `id_user` INT(11) NULL DEFAULT NULL,
  `id_address` INT(11) NULL DEFAULT NULL,
  `freight` DECIMAL(10,2) NULL DEFAULT NULL,
  `date_register` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `FK_carts_users_idx` (`id_user` ASC) VISIBLE,
  INDEX `fk_carts_addresses_idx` (`id_address` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hcode_ecommerce_db`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hcode_ecommerce_db`.`product` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `price` DECIMAL(10,2) NOT NULL,
  `width` DECIMAL(10,2) NOT NULL,
  `height` DECIMAL(10,2) NOT NULL,
  `length` DECIMAL(10,2) NOT NULL,
  `weight` DECIMAL(10,2) NOT NULL,
  `url` VARCHAR(128) NOT NULL,
  `date_register` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hcode_ecommerce_db`.`product_cart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hcode_ecommerce_db`.`product_cart` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `id_cart` INT(11) NOT NULL,
  `id_product` INT(11) NOT NULL,
  `date_removed` DATETIME NOT NULL,
  `date_register` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `FK_cartsproducts_carts_idx` (`id_cart` ASC) VISIBLE,
  INDEX `FK_cartsproducts_products_idx` (`id_product` ASC) VISIBLE,
  CONSTRAINT `fk_cartsproducts_carts`
    FOREIGN KEY (`id_cart`)
    REFERENCES `hcode_ecommerce_db`.`cart` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cartsproducts_products`
    FOREIGN KEY (`id_product`)
    REFERENCES `hcode_ecommerce_db`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hcode_ecommerce_db`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hcode_ecommerce_db`.`category` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `category` VARCHAR(32) NOT NULL,
  `date_register` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hcode_ecommerce_db`.`request_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hcode_ecommerce_db`.`request_status` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `status` VARCHAR(32) NOT NULL,
  `date_register` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hcode_ecommerce_db`.`request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hcode_ecommerce_db`.`request` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `id_user` INT(11) NOT NULL,
  `id_cart` INT(11) NOT NULL,
  `id_status` INT(11) NOT NULL,
  `total_value` DECIMAL(10,2) NOT NULL,
  `date_register` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_request_cart1_idx` (`id_cart` ASC) VISIBLE,
  INDEX `fk_request_user1_idx` (`id_user` ASC) VISIBLE,
  INDEX `fk_request_request_status1_idx` (`id_status` ASC) VISIBLE,
  CONSTRAINT `fk_request_cart1`
    FOREIGN KEY (`id_cart`)
    REFERENCES `hcode_ecommerce_db`.`cart` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_request_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `hcode_ecommerce_db`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_request_request_status1`
    FOREIGN KEY (`id_status`)
    REFERENCES `hcode_ecommerce_db`.`request_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hcode_ecommerce_db`.`product_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hcode_ecommerce_db`.`product_category` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `id_category` INT(11) NOT NULL,
  `id_product` INT(11) NOT NULL,
  PRIMARY KEY (`id`, `id_category`, `id_product`),
  INDEX `fk_productscategories_products_idx` (`id_product` ASC) VISIBLE,
  CONSTRAINT `fk_productscategories_categories`
    FOREIGN KEY (`id_category`)
    REFERENCES `hcode_ecommerce_db`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productscategories_products`
    FOREIGN KEY (`id_product`)
    REFERENCES `hcode_ecommerce_db`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hcode_ecommerce_db`.`user_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hcode_ecommerce_db`.`user_log` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `id_user` INT(11) NOT NULL,
  `log` VARCHAR(128) NOT NULL,
  `ip` VARCHAR(45) NOT NULL,
  `user_agent` VARCHAR(128) NOT NULL,
  `security_session_id` VARCHAR(64) NOT NULL,
  `url` VARCHAR(128) NOT NULL,
  `date_register` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_userslogs_users_idx` (`id_user` ASC) VISIBLE,
  CONSTRAINT `fk_userslogs_users`
    FOREIGN KEY (`id_user`)
    REFERENCES `hcode_ecommerce_db`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hcode_ecommerce_db`.`recover_password`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hcode_ecommerce_db`.`recover_password` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `id_user` INT(11) NOT NULL,
  `ip` VARCHAR(45) NOT NULL,
  `date_recovery` DATETIME NULL DEFAULT NULL,
  `date_register` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_userspasswordsrecoveries_users_idx` (`id_user` ASC) VISIBLE,
  CONSTRAINT `fk_userspasswordsrecoveries_users`
    FOREIGN KEY (`id_user`)
    REFERENCES `hcode_ecommerce_db`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- -----------------------------------------------------
-- procedure p_user_save
-- -----------------------------------------------------

USE `hcode_ecommerce_db`;
DROP procedure IF EXISTS `hcode_ecommerce_db`.`p_user_save`;

DELIMITER $$
USE `hcode_ecommerce_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `p_user_save`(
  
	pname VARCHAR(64),
  	pusername VARCHAR(64),
  	ppassword VARCHAR(256),
  	pemail VARCHAR(128),
  	pn_phone BIGINT(20),
  	pis_admin TINYINT
)
BEGIN
	
    DECLARE vid_person INT;
    
    INSERT INTO person (name, email, n_phone)
    VALUES (pname, pemail, pn_phone);
    
    SET vid_person = LAST_INSERT_ID();
    
    INSERT INTO user (id_person, username, password, is_admin) 
    VALUES (vid_person, pusername, ppassword, pis_admin);
    
    SELECT 
		  u.id, u.id_person, u.username, u.password, u.is_admin, u.date_register,
		  p.name, p.email, p.n_phone, p.date_register 
	 FROM 
		  user u 
	 INNER JOIN 
		  person p 
	 ON 
		  u.id_person = p.id 
	 WHERE 
		  u.id = LAST_INSERT_ID();
END$$

DELIMITER ;
;

-- -----------------------------------------------------
-- procedure p_user_update
-- -----------------------------------------------------

USE `hcode_ecommerce_db`;
DROP procedure IF EXISTS `hcode_ecommerce_db`.`p_user_update`;

DELIMITER $$
USE `hcode_ecommerce_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `p_user_update`(
	pid_user INT,
  	pname VARCHAR(64),
  	pusername VARCHAR(64),
  	ppassword VARCHAR(256),
  	pemail VARCHAR(128),
  	pn_phone BIGINT(20),
  	pis_admin TINYINT
)
BEGIN
	
	DECLARE vid_person INT;
    
    SELECT user.id_person INTO vid_person FROM user WHERE id = pid_user;
    
    UPDATE person
    SET
      name = pname,
      email = pemail,
      n_phone = pn_phone
    WHERE 
      id = vid_person;
    UPDATE 
      user
    SET
      username = pusername,
      password = ppassword,
      is_admin = pis_admin
    WHERE 
      id = pid_user;
    
    SELECT 
      u.id, u.id_person, u.username, u.password, u.is_admin, u.date_register, 
      p.name, p.email, p.n_phone, p.date_register
    FROM 
		  user u 
    INNER JOIN 
		  person p 
    ON 
		  p.id = u.id_person 
    WHERE 
	  	u.id = pid_user;
END$$

DELIMITER ;
;

-- -----------------------------------------------------
-- procedure p_user_delete
-- -----------------------------------------------------

USE `hcode_ecommerce_db`;
DROP procedure IF EXISTS `hcode_ecommerce_db`.`p_user_delete`;

DELIMITER $$
USE `hcode_ecommerce_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `p_user_delete`(
	pid_user INT
)
BEGIN

	DECLARE vid_person INT;
    
    SELECT user.id_person INTO vid_person FROM user WHERE user.id = pid_user;
    
    DELETE FROM user WHERE id = pid_user;
    
    DELETE FROM person WHERE id = vid_person;
    
END$$

DELIMITER ;
;

-- -----------------------------------------------------
-- procedure p_user_pass_recover_create
-- -----------------------------------------------------

USE `hcode_ecommerce_db`;
DROP procedure IF EXISTS `hcode_ecommerce_db`.`p_user_pass_recover_create`;

DELIMITER $$
USE `hcode_ecommerce_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `p_user_pass_recover_create`(
	pid_user INT,
  	pip VARCHAR(45)
)
BEGIN
	
    INSERT INTO recover_password (id_user, ip) 
    VALUES (pid_user, pip);
    
  SELECT 
		rpass.id, rpass.id_user, rpass.ip, rpass.date_recovery, rpass.date_register
	FROM 
		recover_password rpass
	WHERE 
		id = LAST_INSERT_ID();
    
END$$

DELIMITER ;
;

USE `hcode_ecommerce_db`;
DROP procedure IF EXISTS `p_category_save`;

DELIMITER $$
USE `hcode_ecommerce_db`$$
CREATE PROCEDURE `p_category_save`(
	pid INT,
  	pcategory VARCHAR(64)
)

BEGIN

	IF pid > 0 THEN
		UPDATE category c
        SET c.category = pcategory
        WHERE c.id = pid;
    ELSE
    	INSERT INTO category (category) VALUES (pcategory);
        SET pid = LAST_INSERT_ID();
        
    END IF;
    
    SELECT 
		  c.id, c.category, c.date_register
    FROM
    	category c
    WHERE
    	c.id = pid;
END$$

DELIMITER ;

USE `hcode_ecommerce_db`;
DROP procedure IF EXISTS `p_product_save`;

DELIMITER $$
USE `hcode_ecommerce_db`$$
CREATE PROCEDURE `p_product_save`(
  pid INT(11),
  pname VARCHAR(64),
  pprice decimal(10,2),
  pwidth decimal(10,2),
  pheight decimal(10,2),
  plength decimal(10,2),
  pweight decimal(10,2),
  purl varchar(128)
)
BEGIN
	IF pid > 0 THEN
    	
        UPDATE product
        SET
        	name = pname,
            price = pprice,
            width = pwidth,
            height = pheight,
            length = plength,
            weight = pweight,
            url = purl
        WHERE id = pid;
	
    ELSE
    	
        INSERT INTO 
        	product(
              name, price, width, height, length, weight, url
            )
        VALUES(
        	  pname, pprice, pwidth, pheight, plength, pweight, purl
        );
        
        SET pid = LAST_INSERT_ID();
    
    END IF;
    
    SELECT 
    	p.id, p.name, p.price, p.width, p.height, p.length, p.weight, p.url
    FROM 
    	product p
    WHERE
    	p.id = pid;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;